{
  "title": "URL Routing and Configuration",
  "description": "Setting up URL patterns to connect views with web addresses",
  "chapterId": 4,
  "orderIndex": 2,
  "content": "<h2>URL Routing and Configuration</h2><p>URLs connect web addresses to your views. Django uses URL patterns to determine which view should handle each request.</p><h3>Creating App URLs</h3><p>First, create <code>blog/urls.py</code>:</p><pre><code>from django.urls import path\nfrom . import views\n\napp_name = 'blog'\n\nurlpatterns = [\n    path('', views.post_list, name='post_list'),\n    path('post/<slug:slug>/', views.post_detail, name='post_detail'),\n    path('about/', views.about, name='about'),\n]</code></pre><h3>Including App URLs</h3><p>Update the main <code>myblog/urls.py</code>:</p><pre><code>from django.contrib import admin\nfrom django.urls import path, include\nfrom django.conf import settings\nfrom django.conf.urls.static import static\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('blog.urls')),\n]\n\n# Serve media files in development\nif settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)</code></pre><h3>URL Pattern Types</h3><p>Django supports various URL pattern types:</p><pre><code>from django.urls import path, re_path\n\nurlpatterns = [\n    # String patterns\n    path('posts/', views.post_list, name='post_list'),\n    \n    # Parameters\n    path('posts/<int:year>/', views.posts_by_year, name='posts_by_year'),\n    path('posts/<slug:slug>/', views.post_detail, name='post_detail'),\n    \n    # Regular expressions\n    re_path(r'^posts/(?P<year>[0-9]{4})/$', views.posts_by_year, name='posts_by_year'),\n]</code></pre><h3>URL Parameters</h3><ul><li><strong>str</strong> - Matches any non-empty string (default)</li><li><strong>int</strong> - Matches positive integers</li><li><strong>slug</strong> - Matches slug strings (letters, numbers, hyphens, underscores)</li><li><strong>uuid</strong> - Matches UUID strings</li><li><strong>path</strong> - Matches any non-empty string including slashes</li></ul><h3>Named URLs and Reverse</h3><p>Use named URLs for generating links:</p><pre><code># In views.py\nfrom django.urls import reverse\nfrom django.shortcuts import redirect\n\ndef create_post(request):\n    # ... create post logic ...\n    return redirect('blog:post_detail', slug=post.slug)\n\ndef get_post_url(post):\n    return reverse('blog:post_detail', kwargs={'slug': post.slug})</code></pre><h3>URL Namespacing</h3><p>Use namespaces to avoid naming conflicts:</p><pre><code># blog/urls.py\napp_name = 'blog'\n\n# In templates or views, reference as:\n# 'blog:post_list'\n# 'blog:post_detail'</code></pre><h3>Advanced URL Patterns</h3><pre><code>from django.urls import path, include\n\nurlpatterns = [\n    # Basic patterns\n    path('', views.PostListView.as_view(), name='post_list'),\n    path('create/', views.PostCreateView.as_view(), name='post_create'),\n    \n    # With parameters\n    path('category/<str:category>/', views.posts_by_category, name='posts_by_category'),\n    path('tag/<str:tag>/', views.posts_by_tag, name='posts_by_tag'),\n    \n    # Date-based URLs\n    path('<int:year>/', views.posts_by_year, name='posts_by_year'),\n    path('<int:year>/<int:month>/', views.posts_by_month, name='posts_by_month'),\n    \n    # Post management\n    path('post/<slug:slug>/', views.PostDetailView.as_view(), name='post_detail'),\n    path('post/<slug:slug>/edit/', views.PostUpdateView.as_view(), name='post_edit'),\n    path('post/<slug:slug>/delete/', views.PostDeleteView.as_view(), name='post_delete'),\n]</code></pre>",
  "codeExample": "# blog/urls.py\nfrom django.urls import path\nfrom . import views\n\napp_name = 'blog'\n\nurlpatterns = [\n    path('', views.post_list, name='post_list'),\n    path('post/<slug:slug>/', views.post_detail, name='post_detail'),\n    path('about/', views.about, name='about'),\n    path('category/<str:category>/', views.posts_by_category, name='posts_by_category'),\n]\n\n# myblog/urls.py\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('blog.urls')),\n]",
  "codeLanguage": "python"
}