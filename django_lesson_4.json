{
  "title": "Creating Your First Django Model",
  "description": "Building the Post model for our blog with fields and relationships",
  "chapterId": 3,
  "orderIndex": 1,
  "content": "<h2>Creating Your First Django Model</h2><p>Models in Django represent your database tables and define the structure of your data. Let's create a Post model for our blog.</p><h3>Understanding Django Models</h3><p>A model is a Python class that inherits from <code>django.db.models.Model</code>. Each attribute represents a database field.</p><h3>Creating the Post Model</h3><p>Open <code>blog/models.py</code> and add:</p><pre><code>from django.db import models\nfrom django.contrib.auth.models import User\nfrom django.urls import reverse\nfrom django.utils import timezone\n\nclass Post(models.Model):\n    title = models.CharField(max_length=200)\n    slug = models.SlugField(max_length=200, unique=True)\n    author = models.ForeignKey(User, on_delete=models.CASCADE, related_name='blog_posts')\n    content = models.TextField()\n    created_date = models.DateTimeField(default=timezone.now)\n    published_date = models.DateTimeField(blank=True, null=True)\n    status = models.CharField(max_length=10, choices=[\n        ('draft', 'Draft'),\n        ('published', 'Published'),\n    ], default='draft')\n    \n    class Meta:\n        ordering = ['-created_date']\n        \n    def __str__(self):\n        return self.title\n        \n    def get_absolute_url(self):\n        return reverse('blog:post_detail', kwargs={'slug': self.slug})\n        \n    def publish(self):\n        self.published_date = timezone.now()\n        self.status = 'published'\n        self.save()</code></pre><h3>Field Types Explained</h3><ul><li><strong>CharField</strong> - Limited text field (max_length required)</li><li><strong>SlugField</strong> - URL-friendly field for permalinks</li><li><strong>ForeignKey</strong> - Links to another model (User in this case)</li><li><strong>TextField</strong> - Unlimited text field</li><li><strong>DateTimeField</strong> - Date and time field</li></ul><h3>Model Methods</h3><ul><li><strong>__str__</strong> - String representation of the object</li><li><strong>get_absolute_url</strong> - Returns URL for the object</li><li><strong>publish</strong> - Custom method to publish a post</li></ul><h3>Meta Options</h3><p>The <code>Meta</code> class provides metadata about the model:</p><ul><li><strong>ordering</strong> - Default ordering for queries</li></ul>",
  "codeExample": "# blog/models.py\nfrom django.db import models\nfrom django.contrib.auth.models import User\nfrom django.urls import reverse\nfrom django.utils import timezone\n\nclass Post(models.Model):\n    title = models.CharField(max_length=200)\n    slug = models.SlugField(max_length=200, unique=True)\n    author = models.ForeignKey(User, on_delete=models.CASCADE, related_name='blog_posts')\n    content = models.TextField()\n    created_date = models.DateTimeField(default=timezone.now)\n    published_date = models.DateTimeField(blank=True, null=True)\n    status = models.CharField(max_length=10, choices=[\n        ('draft', 'Draft'),\n        ('published', 'Published'),\n    ], default='draft')\n    \n    class Meta:\n        ordering = ['-created_date']\n        \n    def __str__(self):\n        return self.title\n        \n    def get_absolute_url(self):\n        return reverse('blog:post_detail', kwargs={'slug': self.slug})\n        \n    def publish(self):\n        self.published_date = timezone.now()\n        self.status = 'published'\n        self.save()",
  "codeLanguage": "python"
}